from commands import *
import acorn

load(0x8000, "viewspell-part.rom", "65c02")

acorn.bbc()
acorn.is_sideways_rom()
config.set_show_stats(True)
config.set_show_autogenerated_labels(False)
config.set_label_references(True)
config.set_include_assertions(False)
config.set_hex_dump(True)


def inline_string_hook(target, addr):
    n = stringhiz(addr + 3)
    b = get_u8_binary(n)
    if b == 0:
        return n + 1
    return None


def decode_parser_table(addr):
    saddr = addr
    name = ""
    index = 0
    while True:
        b = get_u8_binary(addr)
        if b == 0:
            break
        if b >= 0x80:
            comment(saddr, f"'{name}' -> {index}, flag={b & 0x7f}")
            byte(saddr, len(name))

            name = ""
            saddr = addr + 1
            index += 1
        else:
            name += chr((b ^ ord("[")) & 0xDF)
        addr += 1


def labelword(addr, name):
    word(addr, 2)
    label(addr, name)
    expr_label(addr + 0, f"{name}+0")
    expr_label(addr + 1, f"{name}+1")


def absaddr8(addr):
    addr = memorymanager.BinaryAddr(addr)
    val = memory_binary[addr]
    runtime_addr = movemanager.b2r(addr)
    auto_expr(runtime_addr, str(val))


def immaddr8(addr):
    addr = memorymanager.BinaryAddr(addr)
    label = get_label(
        memory_binary[addr],
        addr,
        binary_addr_type=BinaryAddrType.BINARY_ADDR_IS_AT_LABEL_USAGE,
    )
    runtime_addr = movemanager.b2r(addr)
    auto_expr(runtime_addr, label)


def immaddr(addr_lo, addr_hi):
    addr_lo = memorymanager.BinaryAddr(addr_lo)
    addr_hi = memorymanager.BinaryAddr(addr_hi)
    label = get_label(
        (memory_binary[addr_hi] << 8) | memory_binary[addr_lo],
        addr_lo,
        binary_addr_type=BinaryAddrType.BINARY_ADDR_IS_AT_LABEL_USAGE,
    )
    lo_runtime_addr = movemanager.b2r(addr_lo)
    hi_runtime_addr = movemanager.b2r(addr_hi)
    auto_expr(lo_runtime_addr, make_lo(label))
    auto_expr(hi_runtime_addr, make_hi(label))

label(0x80a6, "install_brk_handler")
label(0x80b2, "application_software_65Tube")
comment(0x80b4, "Y = &00; seems to be internal bank number", align=Align.INLINE)
entry(0x80de)
entry(0x80f5)
string(0x80e4)
entry(0x85e4)
entry(0x8625)
entry(0x869e)
entry(0x86b2)
entry(0x811c)
label(0x86ce, "osword_input_block")
label(0x86d3, "osword_input_block_end")
label(0x0484, "input_buffer")
subroutine(0x80fa, "escape_pressed_during_input")
subroutine(0x808b, "acknowledge_escape")
string(0x8183)
string(0x81ad)
entry(0x818b)
entry(0x81e7)
entry(0x82bc)
entry(0x82bd)
string(0x82ea)
label(0x08, "current_mode")
subroutine(0x830c, "change_mode")
subroutine(0x82ac, "display_memory_full")
subroutine(0x9bdb, "print_inline_string")
entry(0x9bcd)
entry(0x9bab)
entry(0x99fd)
entry(0x9a13)
entry(0x9a1d)
entry(0x9a2d)
entry(0x9a30)
entry(0x9a81)
entry(0x9a50)
entry(0x9a9c)
labelword(0x25, "himem")
entry(0x856d)
entry(0x8588)

entry(0x887d)
entry(0x8898)
entry(0x8932)
entry(0x8954)
string(0x894d)
entry(0x8b29)
entry(0x8b4d)
entry(0x8b5f)
entry(0x8fe3)
entry(0x907d)
string(0x90ae)
entry(0x90b5)
entry(0x9284)
entry(0x92dc)
string(0x9304)
string(0x932c)
entry(0x9334)
string(0x9350)
string(0x933f)
entry(0x9345)
entry(0x9356)
string(0x9406)
entry(0x9410)
entry(0x9411)
entry(0x9428)
entry(0x94f0)
string(0x950a)
string(0x9511)
entry(0x9518)
entry(0x9532)
string(0x95ab)
string(0x95b5)
entry(0x95bf)
entry(0x9641)
entry(0x9cfd)
entry(0x9d12)
string(0x9f32)
entry(0x9f38)
entry(0x9f39)
string(0x9f82)
entry(0x9f87)
entry(0xa847)
entry(0xa6b5)
entry(0xa6d7)
entry(0xa6fb)
entry(0xa706)
entry(0xa723)
string(0xa6f6)
entry(0xa6ca)
string(0xa701)
string(0xa838)
entry(0xa9c2)
entry(0xa9de)
entry(0xa9ed)
entry(0xaa1d)
entry(0xaa46)
entry(0xa96f)
entry(0xa977)
label(0xdf0, "rom_workspace_array")
entry(0xaa27)
entry(0xaa52)
entry(0xacba)
entry(0xace8)
subroutine(0xad94, "get_reset_type")
comment(0xaced, "1 - power on reset", align=Align.INLINE)
label(0xadc1, "rom_list")
entry(0xb02b)
entry(0xb389)
string(0xb4cf)
entry(0xb522)

entry(0xb578)
label(0xbff7, "rom_swap_area")
entry(0xbfdc)
entry(0xbf76)
entry(0xbf7c)
entry(0xbfb7)
entry(0xbfc1)
entry(0xbfcb)
entry(0xbfd5)


go()
