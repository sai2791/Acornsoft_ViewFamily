from commands import *
import acorn

load(0x8000, "viewspell-part.rom", "65c02")

acorn.bbc()
acorn.is_sideways_rom()
config.set_show_stats(True)
config.set_show_autogenerated_labels(False)
config.set_label_references(True)
config.set_include_assertions(False)
config.set_hex_dump(True)


def inline_string_hook(target, addr):
    n = stringhiz(addr + 3)
    b = get_u8_binary(n)
    if b == 0:
        return n + 1
    return None


def decode_parser_table(addr):
    saddr = addr
    name = ""
    index = 0
    while True:
        b = get_u8_binary(addr)
        if b == 0:
            break
        if b >= 0x80:
            comment(saddr, f"'{name}' -> {index}, flag={b & 0x7f}")
            byte(saddr, len(name))

            name = ""
            saddr = addr + 1
            index += 1
        else:
            name += chr((b ^ ord("[")) & 0xDF)
        addr += 1


def labelword(addr, name):
    word(addr, 2)
    label(addr, name)
    expr_label(addr + 0, f"{name}+0")
    expr_label(addr + 1, f"{name}+1")


def absaddr8(addr):
    addr = memorymanager.BinaryAddr(addr)
    val = memory_binary[addr]
    runtime_addr = movemanager.b2r(addr)
    auto_expr(runtime_addr, str(val))


def immaddr8(addr):
    addr = memorymanager.BinaryAddr(addr)
    label = get_label(
        memory_binary[addr],
        addr,
        binary_addr_type=BinaryAddrType.BINARY_ADDR_IS_AT_LABEL_USAGE,
    )
    runtime_addr = movemanager.b2r(addr)
    auto_expr(runtime_addr, label)


def immaddr(addr_lo, addr_hi):
    addr_lo = memorymanager.BinaryAddr(addr_lo)
    addr_hi = memorymanager.BinaryAddr(addr_hi)
    label = get_label(
        (memory_binary[addr_hi] << 8) | memory_binary[addr_lo],
        addr_lo,
        binary_addr_type=BinaryAddrType.BINARY_ADDR_IS_AT_LABEL_USAGE,
    )
    lo_runtime_addr = movemanager.b2r(addr_lo)
    hi_runtime_addr = movemanager.b2r(addr_hi)
    auto_expr(lo_runtime_addr, make_lo(label))
    auto_expr(hi_runtime_addr, make_hi(label))

subroutine(0x804e, "enter_language_rom")
entry(0x8063)
entry(0x8073)
entry(0x8081)
subroutine(0x808b, "acknowledge_escape")
comment(0x80a1, "clear the screen", align=Align.INLINE)
comment(0x80ab, "break handler is at 85e4", align=Align.AFTER_LINE)
comment(0x80b4, "#0, Unknown", align=Align.INLINE)
comment(0x80b0, "65Tube Emulator", align=Align.INLINE)
entry(0x811c)
entry(0x818b)
entry(0x8137)
string(0x81ad)
entry(0x81e7)
entry(0x824c)
string(0x8253)
entry(0x825a)
entry(0x82bb)
entry(0x82ea)
string(0x8329)
entry(0x8336)
entry(0x8348)
string(0x837d)
entry(0x8383)
string(0x8398)
entry(0x83a4)
entry(0x83b5)
entry(0x83d0)
labelword(0x18,"top")
labelword(0x25,"adjusted_himem")
entry(0x856d)
label(0x85db, "unknown_table_1")
entry(0x8625)
entry(0x869e)
entry(0x86b2)
entry(0x86d5)
entry(0x8735)
entry(0x8768)
entry(0x8772)
entry(0x87e2)
string(0x8808)
entry(0x8805)
string(0x8833)
entry(0x887d)
string(0x8892)
entry(0x8898)
string(0x894d)
entry(0x8954)
entry(0x896a)
entry(0x8970)
entry(0x8978)
entry(0x89c7)
string(0x90ae)
entry(0x90b5)
entry(0x92dc)
string(0x9406)
entry(0x9414)
entry(0x9428)
label(0x943e, "unknown_table_2")
entry(0x9ca4)
entry(0x9d12)
entry(0x9efa)
entry(0x9f38)
entry(0x9f39)
entry(0xa6d7)
string(0xa6f6)
entry(0xa6fb)
entry(0xa723)
string(0xa838)
entry(0xa96f)
entry(0xa961)
entry(0xa9de)
entry(0xa9ed)
entry(0xaa27)
entry(0xaa46)
entry(0xacba)
entry(0xace8)
label(0xaefd,"command_table")
comment(0xad1f, "Convert to Uppercase", align=Align.INLINE)
entry(0xb02b)
entry(0xb117)
entry(0xb171)
string(0xb18a)
entry(0xb199)
entry(0xb1d7)
entry(0xb201)
entry(0xb2b8)
entry(0xb323)
entry(0xb33b)
entry(0xb389)
string(0xb4ff)
entry(0xb503)
entry(0xb522)
entry(0xb578)
string(0xb5ef)
entry(0xb5fa)
entry(0xb7a3)
entry(0xb816)
entry(0xb821)
entry(0xb887)
entry(0xb8e4)
entry(0xb8ea)
entry(0xb8ff)
entry(0xb90e)
entry(0xb919)
entry(0xb934)
entry(0x9fa8)
entry(0xb946)
entry(0xb95e)
entry(0xb98a)
entry(0xb993)
entry(0xb9a7)
entry(0xb9ae)
entry(0xb9fa)
entry(0xba01)
entry(0xbb78)
entry(0xbba3)
entry(0xbd61)
label(0xbe96, "table_ind3")
entry(0xbf76)
entry(0xbf7c)
entry(0xbf90)
entry(0xbf96)
entry(0xbfb7)
entry(0xbfc1)
entry(0xbfcb)
entry(0xbfd5)
label(0x806d, "star_command")
label(0x8076, "master_dictionary_filename")
string(0x932c)
entry(0x9518)
entry(0x9532)
entry(0x9531)
string(0x95b4)
string(0x95b5)
string(0x9c24)
entry(0xa571)
entry(0xa577)
entry(0xa6ca)
entry(0x80de)
string(0x80e4)
entry(0x80f5)
subroutine(0x80fa, "escape_pressed")
subroutine(0x9bd0, "print_inline_string")
entry(0x9bd3)
string(0x8304)

go()
