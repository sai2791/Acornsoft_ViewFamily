from commands import *
import acorn

load(0x8000, "viewspell.rom", "6502")

acorn.bbc()
acorn.is_sideways_rom()
config.set_show_stats(True)
config.set_show_autogenerated_labels(False)
config.set_label_references(True)
config.set_include_assertions(False)
config.set_hex_dump(True)


def inline_string_hook(target, addr):
    n = stringhiz(addr + 3)
    b = get_u8_binary(n)
    if b == 0:
        return n + 1
    return None


def decode_parser_table(addr):
    saddr = addr
    name = ""
    index = 0
    while True:
        b = get_u8_binary(addr)
        if b == 0:
            break
        if b >= 0x80:
            comment(saddr, f"'{name}' -> {index}, flag={b & 0x7f}")
            byte(saddr, len(name))

            name = ""
            saddr = addr + 1
            index += 1
        else:
            name += chr((b ^ ord("[")) & 0xDF)
        addr += 1


def labelword(addr, name):
    word(addr, 2)
    label(addr, name)
    expr_label(addr + 0, f"{name}+0")
    expr_label(addr + 1, f"{name}+1")


def absaddr8(addr):
    addr = memorymanager.BinaryAddr(addr)
    val = memory_binary[addr]
    runtime_addr = movemanager.b2r(addr)
    auto_expr(runtime_addr, str(val))


def immaddr8(addr):
    addr = memorymanager.BinaryAddr(addr)
    label = get_label(
        memory_binary[addr],
        addr,
        binary_addr_type=BinaryAddrType.BINARY_ADDR_IS_AT_LABEL_USAGE,
    )
    runtime_addr = movemanager.b2r(addr)
    auto_expr(runtime_addr, label)


def immaddr(addr_lo, addr_hi):
    addr_lo = memorymanager.BinaryAddr(addr_lo)
    addr_hi = memorymanager.BinaryAddr(addr_hi)
    label = get_label(
        (memory_binary[addr_hi] << 8) | memory_binary[addr_lo],
        addr_lo,
        binary_addr_type=BinaryAddrType.BINARY_ADDR_IS_AT_LABEL_USAGE,
    )
    lo_runtime_addr = movemanager.b2r(addr_lo)
    hi_runtime_addr = movemanager.b2r(addr_hi)
    auto_expr(lo_runtime_addr, make_lo(label))
    auto_expr(hi_runtime_addr, make_hi(label))

entry(0x8029)
subroutine(0x802d, "call_osbyte")
subroutine(0x8030, "get_text_cursor_position", "gets the x,y co-ordinate of the cursor", "Gets the current text cursor poxition", None, {'x' : "X pos", 'y' : "y vpos"}, False, None, False)
subroutine(0x9f5e, "sub_9f5e")
subroutine(0x9c15, "sub_9c15")

subroutine(0x9c3d,"sub_9c3d")
entry(0x9c45)
entry(0x9c46)
entry(0x9c5f)
subroutine(0x9c68, "sub_9c68")
entry(0x9cd9)
subroutine(0x9225, "sub_9225")
subroutine(0x81aa, "load_cmd")
subroutine(0x9241, "sub_9241")
subroutine(0x91e7, "sub_91e7")
subroutine(0x91f4, "sub_91f4")
string(0x92ef)
string(0x9302)
string(0x9313)
entry(0x92f7)
entry(0x9308)
entry(0x9319)
entry(0xb008)
subroutine(0xaf1f, "sub_af1f")
subroutine(0xb162, "sub_b162")
subroutine(0xb1bd, "sub_b1bd")
string(0xb443)
string(0xb457)
subroutine(0xb627, "sub_b627")
subroutine(0xb639, "sub_b639")
subroutine(0xb8d8, "sub_b8d8")
subroutine(0xb98e, "sub_b98e")
subroutine(0xb9d4, "sub_b9d4")
subroutine(0xba01, "sub_ba01")
subroutine(0xba63, "sub_ba63")
subroutine(0xba6e, "sub_ba6e")
subroutine(0xba80, "sub_ba80")
subroutine(0xba87, "sub_ba87")
subroutine(0xbae1, "sub_bae1")
subroutine(0xbe2e, "sub_be2e")
label(0x868f, "osword_read_line_block")
subroutine(0x8697, "sub_8697")
subroutine(0x86f6, "sub_86f6")
subroutine(0x8729, "sub_8729")
subroutine(0x8733, "sub_8733")
label(0x87c9, "nick_dean")
string(0x87c9)
subroutine(0x8805, "sub_8805")
subroutine(0x8828, "sub_8828")
entry(0x8859)
label(0x8853, "print_saving")
string(0x9b97)
entry(0x9b9a)
subroutine(0x9ba3, "increment_stack_return_address")
subroutine(0x9b9f, "print_inline_string")
entry(0x87d2)

subroutine(0x9bae, "not_a_page_boundary")
subroutine(0x9bc9, "check_for_token")
subroutine(0x9bd0, "check_for_underline_token")
subroutine(0x9be1, "check_for_backtick_token")
subroutine(0x9b86, "check_for_percent_token")
subroutine(0x9b6c, "call_osasci")
entry(0x9b91)
string(0x9be8)
subroutine(0x9be5, "print_space_words")
string(0x9efa)
entry(0x9f00)
subroutine(0x9f01, "sub_9f01")
label(0x9ec4, "datatable_1")
subroutine(0x9c3d, "print_bad_file")
subroutine(0x9b94, "print_bad")
string(0x9c40)
byte(0x9f4a, 5)
entry(0x9f4f)
wordentry(0x9f70, 33)
label(0x9f70, "jumptable_ind")
subroutine(0xb98b, "jump_ind2v")
subroutine(0xa483, "sub_a483")
label(0xa32c, "datatable_2")
label(0xa32b, "datatable_3")
entry(0xa9ea)
subroutine(0xaa70, "sub_aa70")
subroutine(0xaa76, "sub_aa76")
subroutine(0xaaa2, "sub_aaa2")
label(0xab13, "datatable_4")
subroutine(0xab56, "sub_ab56")
subroutine(0xab63, "sub_ab63")
string(0xab81)
string(0xab8c)
entry(0xab86)
label(0xabc5, "bad_syntax")
string(0xacb0)
string(0xae29)
entry(0xae3f)
entry(0xae30)
entry(0xae24)
string(0xae33)
label(0xb23c, "text_Spell")
label(0xb242, "text_Sheet")
label(0xb248, "text_Store")
label(0xb24e, "text_VIEW")
label(0xb43e, "overview_command_table")
subroutine(0x8114, "wipe_zp_04c_to_05b")
subroutine(0x811f, "decode_command")
label(0xb4fe, "text_keeping")
label(0xb50c, "text_c")
entry(0xb97a)
label(0x0df0, "rom_workspace_array")
subroutine(0x8fa6, "sub_8fa6")
subroutine(0x9049, "sub_9049")
subroutine(0x9063, "sub_9063")
string(0x9071)
entry(0x9078)
string(0x93c9)
entry(0xa32c)
entry(0x93d3)
label(0x93c6, "print_bad_directory")
subroutine(0x94f5, "sub_94f5")
subroutine(0x93de, "check_prefix_for_CR_or_period")
label(0x9409, "datatable_8")
subroutine(0x93dd, "check_prefix_for_CR_or_period_after_increment")
string(0x94cd)
subroutine(0x94ca, "print_not_space")
string(0x94d4)
subroutine(0x94eb, "print_CR_word")
subroutine(0x9564, "print_CR_in")
string(0x956e)
subroutine(0x956b, "print_master")
string(0x9578)
entry(0x9582)
subroutine(0x9575, "print_dictionary")
subroutine(0x95fa, "print_CR_in_user")
entry(0x9604)
byte(0x9605,7)
byte(0x960c,8)
label(0x9692, "text_full")
label(0x9908, "jumptable0_commands")
wordentry(0x9908,21)
subroutine(0x8989, "cmark_cmd")
subroutine(0x9410, "create_cmd")
label(0x62, "output_file_handle")
label(0x9401, "datatable_7")
subroutine(0x94db, "delete_word_cmd")
subroutine(0x94df, "add_word_cmd")
subroutine(0x80cd, "read_user_command_from_prompt")
subroutine(0x80ab, "os_escape_flag_set")
subroutine(0x80dd, "acknowledge_escape_pressed")
label(0x80e2, "print_escape")
entry(0x80ed)
subroutine(0x80ee, "check_os_escape_flag")
label(0xff, "os_escape_flag")
entry(0x80f9)
subroutine(0x80f3, "print_input_cursor")
comment(0x80f6, "decodes to =>", align=Align.INLINE)
label(0x484, "input_buffer")
subroutine(0x8109, "not_a_star_command")
subroutine(0x8143, "print_mistake")
subroutine(0x9258, "convert_to_upper")
subroutine(0x925b, "set_carry_flag_based_on_case")
subroutine(0x9263, "clear_carry_as_lowercase")
subroutine(0x8985, "mark_cmd")
subroutine(0x899a, "context_cmd")
subroutine(0x9239, "convert_a_reg_to_uppercase")
subroutine(0x929f, "prefix_cmd")
subroutine(0x92ec, "print_prefix_settings")
label(0x9336, "text_too_long")
subroutine(0x9324, "print_prefix_text")
string(0x82eb)
label(0x82fd, "print_bytes_free")
subroutine(0x82d8, "print_viewspell_heading_details")
subroutine(0x82ce, "change_mode")
label(0x08, "mode")
subroutine(0x826e, "print_CR_memory_full")
entry(0x827e)
string(0x82ac)
subroutine(0x82a9, "print_bad_mode")
subroutine(0x827f, "mode_cmd")
comment(0x828d, "higher than a number?", align=Align.INLINE)
comment(0x8291, "less than 0?", align=Align.INLINE)
label(0x16, "mode_requested")
entry(0x830b)
byte(0x832f,4)
entry(0x8333)
string(0x833f)
entry(0x8346)
string(0x835a)
entry(0x8366)
subroutine(0x833a, "print_source")
subroutine(0x8355, "print_screen_mode")
entry(0x82f8)
subroutine(0x836a, "print_single_digit_number")
subroutine(0x8029, "get_current_screen_mode")
label(0x8037, "default_master_dictionary")
label(0x4b, "editing_file_flag")
subroutine(0x843b, "get_oshwm")
no_automatic_comment(0x8054)
comment(0x8054,"Clears the screen", align=Align.INLINE)
comment(0x805c, "brk Handler routine at 85a5", align=Align.INLINE)
subroutine(0x85a5, "brk_handler_routine")
subroutine(0x9bd4, "print_cr_if_cursor_xpos_is_not_zero")
no_automatic_comment(0x843d)
comment(0x843d, "get value for page",align=Align.INLINE)
labelword(0x18, "original_page")
subroutine(0x8445, "fix_up_page")
subroutine(0x844c, "page_lsb_is_not_zero")
subroutine(0x8474, "check_page_is_consistent")
labelword(0x001f, "page")
label(0x437, "dictionary_directory_name")
subroutine(0x94a2, "check_file_exists")
subroutine(0x94a7, "get_file_information")
subroutine(0x8084, "print_insert_disk_press_key", "insert disk and press key", "Ask ther user to insert the <filename> disc and press a key", None, None, False, None, False)
label(0x7c, "file_handle_4")
comment(0x8c5b, "clear_filehandle", align=Align.INLINE)
immaddr8(0x80b8)
string(0x8095)
no_automatic_comment(0x8092)
subroutine(0x82db, "print_viewspell_heading")
entry(0x808f)
entry(0x80a6)
subroutine(0x83f9, "print_newline_save_cursor")
subroutine(0x83cb, "populate_prefix_array")
subroutine(0x83a9, "wipe_variables_from_00_to_8e")
entry(0x839d)
subroutine(0x883e, "save_cmd")
subroutine(0x8859, "list_cmd")
string(0x890b)
label(0x890b, "print_marking")
label(0x6f, "file_handle_2")
subroutine(0x9cbf, "open_file_for_input")
subroutine(0x9cc1, "call_osfind_with_block")
subroutine(0x94c4, "get_file_info_then_print_filename_not_found")
subroutine(0x94c7, "print_CR_filename_not_found")
subroutine(0x8516, "print_CR_then_filename")
byte(0x94d0)
subroutine(0x94d1, "print_found")
subroutine(0x8936, "screen_cmd")
subroutine(0x93d4, "name_cmd")
subroutine(0x87e6, "is_there_a_file_loaded")
subroutine(0x8802, "have_file_loaded")
string(0x87f4)
label(0x87f1, "print_no")
label(0x4c4, "filename")
subroutine(0x87a3, "add_cmd")
subroutine(0x87c6, "mark1_cmd")
subroutine(0x85e6, "check_cmd")
subroutine(0x9cd1, "print_bad_word")
subroutine(0x9cda, "search_cmd")
subroutine(0x816c, "print_bad_name")
string(0x816f)
entry(0x8173)
subroutine(0xbe5f, "jump_ind1v")
subroutine(0x8042, "new_cmd")
immaddr(0x8058, 0x805d)
comment(0x8063, "65Tube Emulation", align=Align.INLINE)
subroutine(0x852a, "print_full_stop")
subroutine(0x8526, "load_a_with_space")
subroutine(0x8519, "print_null_then_filename")
subroutine(0x851c, "print_filename_via_pointer")

comment(0x8065, "Y is 0, which is unknown", align=Align.INLINE)
subroutine(0x8f3b, "add_14_to_pointer_for_x_y_equals_4_different_pointer")
subroutine(0x8510, "reset_directory_name")
subroutine(0x9c5f, "load_file_with_block")
subroutine(0x9c61, "osfile_with_block", "call osfile with block", "Calls osfile with a predefined parameter block", {'x' : "parameter block LSB", 'y' : "parameter block MSB"}, {'a' : "Should be &01 if file is found"}, False, None, False)
labelword(0x7d, "pointer2")
subroutine(0x9cb9, "search_word_not_found")
subroutine(0x9cb2, "clear_input_buffer_byte",None, None, {'x' : "offset in input buffer"}, None, False, None, False)
comment(0x97d5, "enhancement call clear_input_buffer_byte instead")
subroutine(0x985d, "jump_to_clear_input_buffer_byte")
subroutine(0x9ec8, "marker_cmd")
subroutine(0x9ef7, "print_bad_string")

subroutine(0x93eb, "user_cmd")
subroutine(0x9f05, "validate_new_marker_length")
label(0x1e, "offset_counter")
comment(0x9f0c, "marker longer than 64 bytes", align=Align.INLINE)
label(0x546, "marker_length")
label(0x8c6a, "close_the_file_we_just_opened")
label(0x8c5d, "call_jump_osfind")
subroutine(0x8d78, "print_checking")
immaddr(0x8f22, 0x8f24)
subroutine(0x8f12, "read_bytes_from_file")
subroutine(0x8f21, "store_filename_address_in_pointer2")
immaddr(0x8f28, 0x8f2a)
subroutine(0x8f2b, "store_x_y_in_pointer2")
subroutine(0x8f30, "add_14_to_x_set_y_to_4")
labelword(0x25, "himem_minus_4_pages")
labelword(0x27, "himem_minus_7_pages")
subroutine(0x845d, "get_himem_store_corrected_values")
labelword(0x3a, "copy_of_page")
subroutine(0x8455, "store_page_zp_variables")
entry(0x865f)
subroutine(0x8657, "print_user")
label(0x5c, "stored_text_cursor_xpos")
label(0x5d, "stored_text_cursor_ypos")
comment(0x841e, "is current xpos < stored xpos", align=Align.INLINE)
subroutine(0x9442, "call_inc_ypos")
subroutine(0x9461, "store_datatable_8_in_zp", "stores data from datatable 8 in zp", "reads the 7 bytes from datatable 8 and stores then in the 7 bytes from 0x25")
subroutine(0x9475, "ignore_spaces_in_input_buffer")
subroutine(0x947f, "shuffle_input_buffer_down")
subroutine(0x948b, "remove_spaces_at_end_of_input_buffer")
subroutine(0x880c, "validate_oshwm")
subroutine(0x8c60, "save_file")
labelword(0xfd, "jsr_return_address")
subroutine(0xb173, "print_inline_error")
subroutine(0xb17e, "write_err_code_and_string_to_buffer")
comment(0xb186, "break and then error code", align=Align.INLINE)
comment(0xb18a, "cause brk with details in pointer")
label(0xb3c4, "datatable_9")
label(0xb3e9, "datatable_5")
label(0xb40e, "datatable_6")
subroutine(0xb355, "sideways_ram_transfer")
comment(0xb365, "osword #&42", align=Align.INLINE)
label(0xb49b, "datatable_10")
label(0xb4dd, "datatable_11")
comment(0xb4fe, "***** replaced with appropriate program name", align=Align.INLINE)

subroutine(0x87ed, "no_file_print_no")
entry(0x9bef)
subroutine(0xacac, "print_not_found")
subroutine(0xb18d, "validate_cmd")
subroutine(0xb433, "find_end_of_command_line_entry")
comment(0xab59, "command does not terminate with CR", align=Align.INLINE)
entry(0xb8be)
subroutine(0xb88c, "print_string_from_stack")
subroutine(0xae26, "print_option_off")
subroutine(0xae30, "print_option_on")
entry(0xae38)
entry(0xae39)
byte(0xaeec,4)
entry(0xbff6)
subroutine(0xbd92, "unknown_swap_around_variables")
byte(0x820e)
entry(0x820f)
string(0x8215)
label(0x8212, "print_unique_words")
entry(0x821e)
byte(0x859c, 9)
label(0x859c, "datatable_12")
subroutine(0x8598, "convert_to_ascii_digit")
comment(0x80be, "reset_stack_pointer")
subroutine(0x8c55, "close_file_handle_using_x_as_offset", "closes file handle", "Close the file using the handle stored in 0x0090,x",{'x' : "offset from 0x0000, where handle is stored"},None, False, None, False)
immaddr8(0x8c54)
immaddr8(0x80c0)
subroutine(0x8c53, "close_output_file")
subroutine(0x8cae, "_less_than_printable_ascii")
subroutine(0x8c9d, "_more_than_ascii_alphabet")
subroutine(0x8e60, "store_himem_minus_four_in_word_0x3e")
subroutine(0x8cff, "_set_a_to_0")
subroutine(0x9b22, "Write_file_ptr", "Write file pointer", "Change the file, using pointer y, to the position supplied in the 4 byte block in x.", {'x' : "pointer to 4 byte block with new position", 'y' : "file handle"}, {'a' : "0 if file extended, otherwise &ff"}, False, None, False)
subroutine(0x9b1e, "move_file_pointer", "moves the file pointer", "Moves the file pointer for the file with handle in Y, x points to 4 byte word for (?new length)",None, None, False, None, False)
subroutine(0x93b9, "check_directory_letter")
byte(0x9f56, 5)
subroutine(0x9b9c, "jsr_osasci")
label(0x9932, "command_table")
subroutine(0x8440, "store_page", "Stores values in 0x18 and 0x19", "Locations 0x18 and 0x19 usually store page, but inline_print_string uses thse for the pointers to the string to print")
label(0x8427, "move_cursor")
subroutine(0x8411, "calculate_spaces_to_print")
subroutine(0x852c, "jump_oswrch")
entry(0x852f)
label(0x852f, "sub_852f")
label(0x40e, "user_prefix_storage")
subroutine(0x8574, "convert_number_to_digit")
subroutine(0x8559, "print_number_as_digits")
subroutine(0xa48d, "read_from_rom")
labelword(0xf6, "osrdsc_ptr")
comment(0xa487, "Rom LSB address", align=Align.INLINE)
comment(0xa48b, "Rom MSB address", align=Align.INLINE)
subroutine(0xa487, "increment_osrdsc_ptr")
subroutine(0xaed9, "cant_open_file")
subroutine(0xad40, "remove_return_address_from_stack")
immaddr(0xb110, 0xb114)
entry(0xa57f)
subroutine(0xa53e, "print_two_spaces")
subroutine(0xa575, "not_lowercase")
entry(0xa535)
entry(0xa4d3)
entry(0xadd0)
entry(0xadef)
subroutine(0xa504, "get_next_byte_from_string_ptr")
labelword(0xa8, "string_ptr")
immaddr(0xa510, 0xa514)
label(0xa580, "overview_help")
label(0xa581, "overview_help_plus_1")
string(0xa5de)
comment(0xa51a, "identifier_byte_for_string", align=Align.INLINE)
comment(0xa580, "first byte is used to identify string, end of string is signified by 0, starts at &81")
subroutine(0xb955, "sub_b955")
subroutine(0xb9bc, "indjmptbl_b9bc")
subroutine(0xbcb3, "indjmptbl_bcb3")
subroutine(0xbc59, "indjmptbl_bd59")
subroutine(0xbc7d, "indjmptbl_bc7d")
subroutine(0xbcd5, "indjmptbl_bcd5")
subroutine(0xb9da, "indjmptbl_b9da")
subroutine(0xba15, "indjmptbl_ba15")
subroutine(0xb9eb, "indjmptbl_b9eb")
subroutine(0xba6c, "indjmptbl_ba6c")
subroutine(0xbb9e, "indjmptbl_bb9e")
subroutine(0xbada, "indjmptbl_bada")
subroutine(0xba80, "indjmptbl_ba80")
subroutine(0xba23, "indjmptbl_ba23")
subroutine(0xba37, "indjmptbl_ba37")
subroutine(0xb9f6, "indjmptbl_b9f6")

subroutine(0xba72, "sub_mba72")
entry(0xbb86)
subroutine(0xbb9b, "jump_ind3v")
label(0x9f71, "jumptable_ind_plus_1")
subroutine(0xb9a5, "setup_ind3v_address")
immaddr(0x8690, 0x868f)
immaddr(0xb356, 0xb358)
subroutine(0xb38c, "read_sram_block_0c43")
subroutine(0xb3bd, "store_a_in_0x181")
subroutine(0xb306, "jump_to_cb2c4")
comment(0xa50c, "increment MSB if required", align=Align.INLINE)
comment(0xa54b, "command token references start at &80", align=Align.INLINE)
comment(0xa54e, "get current command token", align=Align.INLINE)
comment(0xa556, "push current string ptr to stack", align=Align.INLINE)
comment(0xa557, "store new command token", align=Align.INLINE)
comment(0xa565, "more than 127", align=Align.INLINE)
subroutine(0xb1f2, "check_rom_workspace_for_four")
subroutine(0xa9b8, "masked_rom_workspace_byte_less_than_four")
subroutine(0xa9c0, "restore_string_ptr_from_local_stack")
subroutine(0xa997, "store_local_stack_on_stack_move_string_ptr_to_local_stack")
comment(0xab4f, "is shadow mode selected", align=Align.INLINE)
subroutine(0xab47, "check_for_shadow_mode")
subroutine(0xb0fc, "jump_to_af59")
subroutine(0xaf59, "cant_open_file_clear_return_address_from_start")
label(0xb253, "rom_name_datatable")
comment(0xb253, "offset from text_Spell for each command", align=Align.BEFORE_LINE)
comment(0xb22c, "get offset from text_Spell, for each command", align=Align.INLINE)
subroutine(0xb230, "store_command_name_at_string_pointer")
label(0xab, "command_token")
subroutine(0xb215, "jump_osbyte")
subroutine(0xb5f2, "divert_rdchv")
subroutine(0xb5fd, "install_rdchv_additional_code")
label(0xb610, "install_user_rdchv")
label(0xbf68, "datatable_20")
label(0xbfbc, "datatable_21")
label(0xbfbe, "datatable_22")
subroutine(0xb13b, "sub_mb13b")
subroutine(0xa49b, "sub_ma49b")
subroutine(0xa4a2, "sub_ma4a2")
subroutine(0xa567, "check_for_lowercase_command")
subroutine(0x839e, "set_to_initial_condition")




go()

